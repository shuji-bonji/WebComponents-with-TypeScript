import{_ as t,c as a,o,a2 as l}from"./chunks/framework.d0B5J8SC.js";const h=JSON.parse('{"title":"基本知識","description":"Web Components を支える基本技術を体系的に解説。Custom Elements、Shadow DOM、HTML Templates、Slot の連携、ES Modules による依存管理、TypeScript を活用した型安全な実装まで、Web 標準技術に準拠した開発手法を学びます。","frontmatter":{"title":"基本知識","description":"Web Components を支える基本技術を体系的に解説。Custom Elements、Shadow DOM、HTML Templates、Slot の連携、ES Modules による依存管理、TypeScript を活用した型安全な実装まで、Web 標準技術に準拠した開発手法を学びます。"},"headers":[],"relativePath":"concepts/index.md","filePath":"concepts/index.md"}'),s={name:"concepts/index.md"};function i(n,e,m,r,p,c){return o(),a("div",null,e[0]||(e[0]=[l('<h1 id="基本知識" tabindex="-1">基本知識 <a class="header-anchor" href="#基本知識" aria-label="Permalink to &quot;基本知識&quot;">​</a></h1><p>このセクションでは、Web Components を具体的に利用する前に、Web Components を支える基本技術についての基本知識を体系的に学んでいきます。<br> 各トピックは、Web 標準技術に準拠し、TypeScript を活用した実装例とともに解説しています。</p><h2 id="🔹-学習内容" tabindex="-1">🔹 学習内容 <a class="header-anchor" href="#🔹-学習内容" aria-label="Permalink to &quot;🔹 学習内容&quot;">​</a></h2><ul><li><a href="./webcomponents-overview.html">WebComponentsとは？</a></li><li><a href="./custom-elements.html">Custom Elements</a></li><li><a href="./custom-element-lifecycle.html">Custom Element のライフサイクル</a></li><li><a href="./shadow-dom.html">Shadow DOM</a></li><li><a href="./html-templates.html">HTML Templates</a></li><li><a href="./template-slot-integration.html">Template と Slot の連携</a></li><li><a href="./es-modules.html">ES Modules</a></li><li><a href="./standards-position.html">Web標準としての位置づけ</a></li><li><a href="./why-typescript.html">TypeScriptを使う理由とメリット</a></li></ul><p>各トピックは順番に進めることで、Web Components の基本から応用まで、体系的な理解を深めることができます。<br> 特に <code>Shadow DOM</code> や <code>Template と Slot</code> のセクションでは、コンポーネントのカプセル化と再利用性について詳しく解説しています。</p>',5)]))}const u=t(s,[["render",i]]);export{h as __pageData,u as default};
