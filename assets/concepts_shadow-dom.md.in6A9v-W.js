import{_ as n,C as l,c as k,o as i,a2 as a,b as e,w as t,a as p,G as d,a3 as E}from"./chunks/framework.d0B5J8SC.js";const D=JSON.parse('{"title":"Shadow DOM","description":"Shadow DOM の仕組みと構造を解説。Shadow Host、Shadow Root、Shadow Boundary の役割、open/closed モードの使い分け、スタイルのカプセル化、dir/lang 属性の継承、Custom Elements との統合方法を図解と実装例とともに詳しく紹介します。","frontmatter":{"title":"Shadow DOM","description":"Shadow DOM の仕組みと構造を解説。Shadow Host、Shadow Root、Shadow Boundary の役割、open/closed モードの使い分け、スタイルのカプセル化、dir/lang 属性の継承、Custom Elements との統合方法を図解と実装例とともに詳しく紹介します。"},"headers":[],"relativePath":"concepts/shadow-dom.md","filePath":"concepts/shadow-dom.md"}'),o={name:"concepts/shadow-dom.md"};function r(g,s,c,y,F,u){const h=l("Mermaid");return i(),k("div",null,[s[1]||(s[1]=a(`<h1 id="shadow-dom" tabindex="-1">Shadow DOM <a class="header-anchor" href="#shadow-dom" aria-label="Permalink to &quot;Shadow DOM&quot;">​</a></h1><p><strong>Shadow DOM</strong> は、Web Components の主要な構成要素の一つで、要素内部の DOM 構造を外部のスタイルやスクリプトから隔離する技術です。これにより、真の意味でのカプセル化が実現できます。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shadowRoot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> div.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attachShadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;open&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;p&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p.textContent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Shadow DOM World!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shadowRoot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p);</span></span></code></pre></div><h2 id="🔹-shadow-dom-の主な特徴" tabindex="-1">🔹 Shadow DOM の主な特徴 <a class="header-anchor" href="#🔹-shadow-dom-の主な特徴" aria-label="Permalink to &quot;🔹 Shadow DOM の主な特徴&quot;">​</a></h2><ul><li>スタイルと構造のカプセル化: <ul><li>外部の CSS が影響しない。</li><li>内部の DOM 構造が外部スクリプトから直接操作されない。</li></ul></li><li>独立した DOM ツリー: <ul><li>通常の DOM の一部として存在するが、shadowRoot によって分離される。</li></ul></li><li>スコープ付きの CSS: <ul><li>シャドウ DOM 内のスタイルは外部に影響を与えず、外部のスタイルの影響も受けない。</li></ul></li></ul><h2 id="🔹-なぜ-shadow-dom-が重要か" tabindex="-1">🔹 なぜ Shadow DOM が重要か？ <a class="header-anchor" href="#🔹-なぜ-shadow-dom-が重要か" aria-label="Permalink to &quot;🔹 なぜ Shadow DOM が重要か？&quot;">​</a></h2><p>最近のフロントエンドフレームワーク（React、Vue、Angular など）では、各コンポーネントが独立したスタイルスコープを持ち、外部の影響を受けずに動作する設計が一般的です。<br><strong>Shadow DOM</strong> はこれを <strong>ネイティブ Web 標準として提供</strong> することで、以下のメリットを実現しています。</p><ol><li><p><strong>フレームワークに依存しないカプセル化</strong></p><ul><li>JavaScript フレームワークを使用しなくても、Web 標準だけでスタイルと DOM の隔離が可能です。</li><li>軽量で依存が少なく、サーバーサイドレンダリング（SSR）とも相性が良い。</li></ul></li><li><p><strong>他のフレームワークと衝突しない</strong></p><ul><li>アプリケーションが複数のライブラリやフレームワークで構成されていても、影響を受けることなく動作します。</li><li>例として、Vue コンポーネント内で Shadow DOM を持つカスタム要素をそのまま使用できます。</li></ul></li><li><p><strong>真のカプセル化</strong></p><ul><li>スタイルのリークや CSS の衝突が完全になくなります。</li><li>例えば、親要素の <code>display: none</code> や <code>overflow: hidden</code> の影響を受けず、独立して動作可能です。</li></ul></li></ol><h2 id="🔹-shadow-dom-における構成" tabindex="-1">🔹 Shadow DOM　における構成 <a class="header-anchor" href="#🔹-shadow-dom-における構成" aria-label="Permalink to &quot;🔹 Shadow DOM　における構成&quot;">​</a></h2><h3 id="構成" tabindex="-1">構成 <a class="header-anchor" href="#構成" aria-label="Permalink to &quot;構成&quot;">​</a></h3><table tabindex="0"><thead><tr><th>用語</th><th>説明</th></tr></thead><tbody><tr><td><code>Shadow Host</code></td><td>Shadow DOMを取り付ける通常のDOM要素（例：カスタム要素）</td></tr><tr><td><code>Shadow Root</code></td><td>Shadow DOM のルートノード<br><code>element.attachShadow()</code>によって作成される特殊なルートノード。<br>これが<code>Shadow Boundary</code>を確立し、内部のコンテンツとスタイルをカプセル化します。</td></tr><tr><td><code>Shadow Tree</code></td><td>Shadow Root内に構築されるDOM要素のツリー</td></tr><tr><td><code>Shadow Boundary</code></td><td>Shadow DOM内のコンテンツとLight DOM（外部DOM）を分離する概念的な境界<br>これにより<ul><li>外部からのクエリセレクタによる内部要素の選択防止</li><li>CSS定義のスコープ分離</li><li>イベントの再ターゲティング（retargeting）</li></ul></td></tr></tbody></table><h3 id="構成図" tabindex="-1">構成図 <a class="header-anchor" href="#構成図" aria-label="Permalink to &quot;構成図&quot;">​</a></h3>`,13)),(i(),e(E,null,{default:t(()=>[d(h,{id:"mermaid-170",class:"mermaid",graph:"graph%20TB%0A%20%20%20%20A%5BShadow%20Host%5D%20--%3E%20%7C%22attachShadow()%22%7C%20B%5BShadow%20Root%5D%0A%20%20%20%20%0A%20%20%20%20G%5BLight%20DOM%5D%20-.-%3E%20%7C%22%E3%82%B9%E3%83%AD%E3%83%83%E3%83%88%E3%82%92%E9%80%9A%E3%81%98%E3%81%A6%E6%8A%95%E5%BD%B1%22%7C%20D%0A%0A%20%20%20%20H%5BShadow%20DOM%5D%20-.-%20shadowBoundary%0A%20%20%20%20style%20H%20fill%3A%23333%2Cstroke%3A%23333%2Cstroke-dasharray%3A%205%205%0A%0A%20%20%20%20subgraph%20shadowBoundary%5B%22Shadow%20Boundary%22%5D%0A%20%20%20%20%20%20%20%20B%20--%3E%20C%5BShadow%20Tree%5D%0A%20%20%20%20%20%20%20%20C%20--%3E%20D%5B%E3%82%B9%E3%83%AD%E3%83%83%E3%83%88%5D%0A%20%20%20%20%20%20%20%20C%20--%3E%20E%5B%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%5D%0A%20%20%20%20%20%20%20%20C%20--%3E%20F%5B%E5%86%85%E9%83%A8DOM%E8%A6%81%E7%B4%A0%5D%0A%20%20%20%20end%20%20%20%20%0A"})]),fallback:t(()=>s[0]||(s[0]=[p(" Loading... ")])),_:1})),s[2]||(s[2]=a(`<p>Shadow DOM は <code>Shadow Boundary</code> によって Light DOM と明確に区切られています。<br> この境界により、内部の要素は外部から影響を受けず、独立したスタイルや構造を保持します。</p><h2 id="🔹-shadow-dom-の作成" tabindex="-1">🔹 Shadow DOM の作成 <a class="header-anchor" href="#🔹-shadow-dom-の作成" aria-label="Permalink to &quot;🔹 Shadow DOM の作成&quot;">​</a></h2><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ja&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // シャドウ DOM を作成</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hostElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shadowRoot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hostElement.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attachShadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;open&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // シャドウ DOM 内に要素を追加</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    shadowRoot.innerHTML </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;style&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        p {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          color: red;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          font-weight: bold;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;/style&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;p&gt;シャドウ DOM 内の要素&lt;/p&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="🔹-shadow-dom-が継承できる属性" tabindex="-1">🔹 Shadow DOM が継承できる属性 <a class="header-anchor" href="#🔹-shadow-dom-が継承できる属性" aria-label="Permalink to &quot;🔹 Shadow DOM が継承できる属性&quot;">​</a></h2><p><code>Shadow Tree</code>と <code>&lt;slot&gt;</code> 要素は、シャドウホストから <code>dir</code> および <code>lang</code> 属性を継承しています。</p><p>Shadow DOM 内部の要素は、シャドウホスト（Shadow Host）から特定の属性を自動的に継承します。<br> これは、</p><h3 id="🎯-継承される属性一覧" tabindex="-1">🎯 継承される属性一覧 <a class="header-anchor" href="#🎯-継承される属性一覧" aria-label="Permalink to &quot;🎯 継承される属性一覧&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性名</th><th>説明</th><th>使用例</th></tr></thead><tbody><tr><td><code>dir</code></td><td>テキストの方向（<code>ltr</code> 左から右、<code>rtl</code> 右から左）</td><td><code>&lt;div dir=&quot;rtl&quot;&gt;</code></td></tr><tr><td><code>lang</code></td><td>言語設定（例：<code>en</code>, <code>ja</code>）</td><td><code>&lt;div lang=&quot;ja&quot;&gt;</code></td></tr><tr><td><code>slot</code></td><td><code>&lt;slot&gt;</code> 要素へのスロット指定</td><td><code>&lt;span slot=&quot;header&quot;&gt;</code></td></tr></tbody></table><h2 id="🔹-shadow-dom-の種類" tabindex="-1">🔹 Shadow DOM の種類 <a class="header-anchor" href="#🔹-shadow-dom-の種類" aria-label="Permalink to &quot;🔹 Shadow DOM の種類&quot;">​</a></h2><p><code>attachShadow()</code> の <code>mode</code> オプションには <code>&quot;open&quot;</code> と <code>&quot;closed&quot;</code> の2種類があります。<br><code>attachShadow({ mode })</code> を使って作成し、<code>mode</code> に <code>&quot;open&quot;</code> や <code>&quot;closed&quot;</code> を指定します。</p><table tabindex="0"><thead><tr><th>モード</th><th>特徴</th><th>アクセス方法</th><th>主な利用シーン</th></tr></thead><tbody><tr><td><strong>open</strong></td><td>外部から参照・操作が可能</td><td><code>element.shadowRoot</code> でアクセス</td><td><strong>開発者が外部からのアクセスを必要とする場合</strong>。例えば、開発者ツールでのデバッグ、外部スクリプトからの DOM 操作、テスト用スクリプトなど。</td></tr><tr><td><strong>closed</strong></td><td>外部から参照・操作が不可能</td><td>JavaScript からもアクセス不可</td><td><strong>完全なカプセル化が求められる場合</strong>。他のスクリプトや開発者ツールから内部構造を隠したい場合に使用。セキュアなフォームやプライバシー重視のウィジェットなど。</td></tr></tbody></table><h3 id="🎯-違いの具体例" tabindex="-1">🎯 違いの具体例 <a class="header-anchor" href="#🎯-違いの具体例" aria-label="Permalink to &quot;🎯 違いの具体例&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> el</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;div&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// open モード（外部からアクセス可能）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shadowOpen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> el.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attachShadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;open&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shadowOpen.innerHTML </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`&lt;p&gt;Open Shadow DOM&lt;/p&gt;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(el.shadowRoot); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ShadowRoot オブジェクトを参照できる</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shadowOpen.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).textContent); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Open Shadow DOM&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// closed モード（外部からアクセス不可）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shadowClosed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> el.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attachShadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;closed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shadowClosed.innerHTML </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`&lt;p&gt;Closed Shadow DOM&lt;/p&gt;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(el.shadowRoot); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// null</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shadowClosed.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).textContent);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;アクセスできません&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="🎯-利用方法の区分け" tabindex="-1">🎯 利用方法の区分け <a class="header-anchor" href="#🎯-利用方法の区分け" aria-label="Permalink to &quot;🎯 利用方法の区分け&quot;">​</a></h3><table tabindex="0"><thead><tr><th>ケース</th><th>モード選定</th><th>理由</th></tr></thead><tbody><tr><td>デバッグが必要な開発段階</td><td><code>open</code></td><td>外部から DOM 構造を確認できるため、素早いデバッグが可能</td></tr><tr><td>サードパーティーの統合</td><td><code>open</code></td><td>他のライブラリやフレームワークとの統合が容易</td></tr><tr><td>完全に隔離された内部ロジック</td><td><code>closed</code></td><td>外部から一切の DOM 変更を防ぐ</td></tr><tr><td>セキュリティが重要なフォーム</td><td><code>closed</code></td><td>他のスクリプトからの操作を防ぎ、データ漏洩を防止</td></tr><tr><td>再利用性が高い UI コンポーネント</td><td><code>open</code></td><td>開発者が意図的にカスタマイズしやすい</td></tr></tbody></table><p><code>open</code> は開発の容易さを優先する場合、<code>closed</code> はセキュリティやプライバシーを優先する場合に使い分けると良いでしょう。</p><h2 id="🔹-shadow-dom-内部の要素を取得" tabindex="-1">🔹 Shadow DOM 内部の要素を取得 <a class="header-anchor" href="#🔹-shadow-dom-内部の要素を取得" aria-label="Permalink to &quot;🔹 Shadow DOM 内部の要素を取得&quot;">​</a></h2><p>Shadow DOM は、外部の CSS やスクリプトの影響を受けない（逆に、外部スタイルを適用しづらい）。</p><h3 id="attachshadow-mode-open-を使って-hostelement-にシャドウ-dom-を作成。" tabindex="-1">attachShadow({ mode: &quot;open&quot; }) を使って hostElement にシャドウ DOM を作成。 <a class="header-anchor" href="#attachshadow-mode-open-を使って-hostelement-にシャドウ-dom-を作成。" aria-label="Permalink to &quot;attachShadow({ mode: &quot;open&quot; }) を使って hostElement にシャドウ DOM を作成。&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ja&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shadowRoot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> host.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attachShadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;open&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    shadowRoot.innerHTML </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`&lt;p id=&quot;message&quot;&gt;シャドウ DOM 内の要素&lt;/p&gt;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // シャドウ DOM 内の要素を取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shadowRoot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).textContent); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;シャドウ DOM 内の要素&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 通常の DOM からはアクセスできない</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>通常の <code>document.querySelector()</code> ではシャドウ DOM 内の要素は取得できない。</p><h2 id="🔹-shadow-dom-と-custom-element" tabindex="-1">🔹 Shadow DOM と Custom Element <a class="header-anchor" href="#🔹-shadow-dom-と-custom-element" aria-label="Permalink to &quot;🔹 Shadow DOM と Custom Element&quot;">​</a></h2><p>Web Components（カスタム要素）と組み合わせて使うのが一般的です。</p><h3 id="📌-shadow-dom-を利用した、web-componentの作成" tabindex="-1">📌 Shadow DOM を利用した、Web Componentの作成 <a class="header-anchor" href="#📌-shadow-dom-を利用した、web-componentの作成" aria-label="Permalink to &quot;📌 Shadow DOM を利用した、Web Componentの作成&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FilledCircle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  connectedCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Shadow Rootの作成</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // この場合、カスタム要素自体がシャドウホストです</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shadow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attachShadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;open&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Shadow DOMの実装</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> svg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElementNS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://www.w3.org/2000/svg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;svg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> circle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElementNS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;http://www.w3.org/2000/svg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;circle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    circle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;50&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    circle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;50&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    circle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;r&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;50&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    circle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fill&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    svg.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(circle);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    shadow.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(svg);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">customElements.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;filled-circle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, FilledCircle);</span></span></code></pre></div><h3 id="📌-shadow-dom-を使った、web-componentの利用" tabindex="-1">📌 Shadow DOM を使った、Web Componentの利用 <a class="header-anchor" href="#📌-shadow-dom-を使った、web-componentの利用" aria-label="Permalink to &quot;📌 Shadow DOM を使った、Web Componentの利用&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">filled-circle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">filled-circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>シャドウ DOM を活用すれば、安全で再利用可能なコンポーネントを作成 できるます。</p><h2 id="🔹-シャドウ-dom-の利点" tabindex="-1">🔹 シャドウ DOM の利点 <a class="header-anchor" href="#🔹-シャドウ-dom-の利点" aria-label="Permalink to &quot;🔹 シャドウ DOM の利点&quot;">​</a></h2><ul><li>スタイルのカプセル化</li><li>外部スクリプトの影響を受けにくい</li><li>再利用可能な Web コンポーネントの構築が容易</li></ul><h2 id="🔹-shadow-dom-の制限" tabindex="-1">🔹 Shadow DOM の制限 <a class="header-anchor" href="#🔹-shadow-dom-の制限" aria-label="Permalink to &quot;🔹 Shadow DOM の制限&quot;">​</a></h2><ul><li><p><strong>外部 CSS は影響しない</strong></p><ul><li>外部のスタイルシートはシャドウツリーには届きません。</li><li>逆に、シャドウツリー内のスタイルも外部には影響しません。</li></ul></li><li><p><strong>スクリプトのスコープ</strong></p><ul><li>Shadow DOM 内のスクリプトは他の DOM と分離されており、外部からの操作は制限されます。</li></ul></li></ul>`,32))])}const m=n(o,[["render",r]]);export{D as __pageData,m as default};
