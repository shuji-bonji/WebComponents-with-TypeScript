import{_ as e,c as o,o as l,a2 as a}from"./chunks/framework.d0B5J8SC.js";const u=JSON.parse('{"title":"Web Components の標準化とブラウザ対応","description":"Web Components の4つの標準仕様と各ブラウザの対応状況、Polyfill、将来的な拡張仕様（HTML Modules 等）について整理。","frontmatter":{"title":"Web Components の標準化とブラウザ対応","description":"Web Components の4つの標準仕様と各ブラウザの対応状況、Polyfill、将来的な拡張仕様（HTML Modules 等）について整理。"},"headers":[],"relativePath":"concepts/standards-position.md","filePath":"concepts/standards-position.md"}'),s={name:"concepts/standards-position.md"};function i(d,t,r,n,h,p){return l(),o("div",null,t[0]||(t[0]=[a('<h1 id="web-components-の標準化と各ブラウザの対応状況" tabindex="-1">Web Components の標準化と各ブラウザの対応状況 <a class="header-anchor" href="#web-components-の標準化と各ブラウザの対応状況" aria-label="Permalink to &quot;Web Components の標準化と各ブラウザの対応状況&quot;">​</a></h1><p><strong>Web Components</strong> は、ブラウザ間での一貫したカスタム要素の利用と、再利用可能な UI コンポーネントの作成を目指した Web 標準技術です。<br> 現在、主要なブラウザ（Chrome、Firefox、Safari、Edge）はほぼ完全に対応していますが、一部の API や挙動に差異がある場合もあります。</p><h2 id="🔹-web-components-の-4-つの主要な仕様" tabindex="-1">🔹 Web Components の 4 つの主要な仕様 <a class="header-anchor" href="#🔹-web-components-の-4-つの主要な仕様" aria-label="Permalink to &quot;🔹 Web Components の 4 つの主要な仕様&quot;">​</a></h2><ol><li><p><strong>Custom Elements</strong></p><ul><li>独自の HTML タグを定義し、属性やメソッドを追加できる仕様</li><li><code>customElements.define()</code> によって登録される</li></ul></li><li><p><strong>Shadow DOM</strong></p><ul><li>DOM のカプセル化を実現し、外部のスタイルや JavaScript の影響を受けない</li><li><code>attachShadow({ mode: &#39;open&#39; })</code> で Shadow Root を作成</li></ul></li><li><p><strong>HTML Templates</strong></p><ul><li>再利用可能な DOM 構造を定義し、描画を遅延させる</li><li><code>&lt;template&gt;</code> タグ内に定義され、JavaScript で複製される</li></ul></li><li><p><strong>ES Modules</strong></p><ul><li>モジュール単位での依存管理と、ブラウザネイティブな <code>import/export</code> を提供</li><li><code>&lt;script type=&quot;module&quot;&gt;</code> によってロード</li></ul></li></ol><h2 id="🔹-ブラウザごとの対応状況" tabindex="-1">🔹 ブラウザごとの対応状況 <a class="header-anchor" href="#🔹-ブラウザごとの対応状況" aria-label="Permalink to &quot;🔹 ブラウザごとの対応状況&quot;">​</a></h2><table tabindex="0"><thead><tr><th>機能</th><th>Chrome</th><th>Firefox</th><th>Safari</th><th>Edge</th></tr></thead><tbody><tr><td>Custom Elements</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>Shadow DOM</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>HTML Templates</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>ES Modules</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr></tbody></table><ul><li>現在、すべての主要ブラウザが標準準拠しています。</li><li>ただし、古いバージョンのブラウザでは Polyfill が必要な場合があります。</li></ul><h2 id="🔹-polyfill-の必要性" tabindex="-1">🔹 Polyfill の必要性 <a class="header-anchor" href="#🔹-polyfill-の必要性" aria-label="Permalink to &quot;🔹 Polyfill の必要性&quot;">​</a></h2><p>一部の旧ブラウザ（Internet Explorer や旧版の Safari）では、Web Components の完全なサポートがありません。<br> これらのブラウザでの動作を保証するには、次の Polyfill を利用します。</p><h3 id="📌-推奨-polyfill" tabindex="-1">📌 推奨 Polyfill <a class="header-anchor" href="#📌-推奨-polyfill" aria-label="Permalink to &quot;📌 推奨 Polyfill&quot;">​</a></h3><ul><li><a href="https://github.com/webcomponents/polyfills" target="_blank" rel="noreferrer">webcomponentsjs</a><ul><li>Custom Elements, Shadow DOM, HTML Template をカバー</li><li>CDN 経由で簡単に追加可能</li></ul></li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/@webcomponents/webcomponentsjs@2.5.0/webcomponents-loader.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="🔹-ブラウザの-future-position" tabindex="-1">🔹 ブラウザの Future Position <a class="header-anchor" href="#🔹-ブラウザの-future-position" aria-label="Permalink to &quot;🔹 ブラウザの Future Position&quot;">​</a></h2><p>各ブラウザベンダー（Google、Mozilla、Apple、Microsoft）は Web Components の標準化にコミットしており、<br><a href="https://github.com/WICG/webcomponents/blob/gh-pages/proposals/html-modules-explainer.md" target="_blank" rel="noreferrer">HTML Modules</a> や <a href="https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/CSSStyleSheet" target="_blank" rel="noreferrer">Constructable Stylesheets</a> のような新しい仕様も実装が進められています。</p><table tabindex="0"><thead><tr><th>機能</th><th>Chrome</th><th>Firefox</th><th>Safari</th><th>Edge</th></tr></thead><tbody><tr><td>HTML Modules</td><td>🚧</td><td>❌</td><td>❌</td><td>🚧</td></tr><tr><td>Constructable Stylesheets</td><td>✅</td><td>🚧</td><td>✅</td><td>✅</td></tr></tbody></table><ul><li><strong>HTML Modules</strong>：HTML ファイル自体をモジュールとしてインポートできる新仕様</li><li><strong>Constructable Stylesheets</strong>：Shadow DOM 内で動的にスタイルを共有できる</li></ul><h2 id="🔹-まとめ" tabindex="-1">🔹 まとめ <a class="header-anchor" href="#🔹-まとめ" aria-label="Permalink to &quot;🔹 まとめ&quot;">​</a></h2><p>Web Components は現在の Web 標準の一部として、各ブラウザで広くサポートされています。<br> 一部の新しい機能（HTML Modules など）はまだ進行中ですが、Polyfill による互換性維持も十分可能です。<br> 今後の拡張を見据えて、モダンな開発手法を学んでおくことで、将来的なアップデートにも対応しやすくなります。</p>',18)]))}const b=e(s,[["render",i]]);export{u as __pageData,b as default};
