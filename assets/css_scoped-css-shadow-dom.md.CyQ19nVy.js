import{_ as h,C as n,c as l,o as i,a2 as e,b as p,j as k,w as a,a as d,G as E,a3 as o}from"./chunks/framework.d0B5J8SC.js";const F=JSON.parse('{"title":"🔹 擬似クラス一覧","description":"","frontmatter":{},"headers":[],"relativePath":"css/scoped-css-shadow-dom.md","filePath":"css/scoped-css-shadow-dom.md"}'),r={name:"css/scoped-css-shadow-dom.md"};function c(g,s,y,b,u,C){const t=n("Mermaid");return i(),l("div",null,[s[1]||(s[1]=e(`<h1 id="🔹-擬似クラス一覧" tabindex="-1">🔹 擬似クラス一覧 <a class="header-anchor" href="#🔹-擬似クラス一覧" aria-label="Permalink to &quot;🔹 擬似クラス一覧&quot;">​</a></h1><table tabindex="0"><thead><tr><th>疑似クラス</th><th>説明</th><th>用途</th></tr></thead><tbody><tr><td><code>::slotted()</code></td><td><code>&lt;slot&gt;</code> に投影された要素のスタイリング</td><td>Shadow DOM 内の外部要素の装飾</td></tr><tr><td><code>::part()</code></td><td>Shadow DOM 内部のパーツを外部からスタイル付与</td><td>カスタム要素の一部をスタイリング</td></tr><tr><td><code>::before</code></td><td>要素の前にコンテンツを挿入</td><td>インジケータや装飾の追加</td></tr><tr><td><code>::after</code></td><td>要素の後にコンテンツを挿入</td><td>インジケータや装飾の追加</td></tr><tr><td><code>::backdrop</code></td><td><code>&lt;dialog&gt;</code> 要素の背景にスタイルを適用</td><td>モーダル背景のデザイン変更</td></tr></tbody></table><hr><h1 id="scoped-css-in-shadow-dom" tabindex="-1">Scoped CSS in Shadow DOM <a class="header-anchor" href="#scoped-css-in-shadow-dom" aria-label="Permalink to &quot;Scoped CSS in Shadow DOM&quot;">​</a></h1><p>Web Components の Scoped CSS は、外部のスタイルや JavaScript の影響を受けず、<br> Shadow DOM 内部のスタイルを閉じ込めることができます。</p><p>Web Components の Scoped CSS では、以下の擬似クラスを使用して特定の要素にスタイルを付与できます。</p><h2 id="🔹-slotted" tabindex="-1">🔹 ::slotted() <a class="header-anchor" href="#🔹-slotted" aria-label="Permalink to &quot;🔹 ::slotted()&quot;">​</a></h2><p>Shadow DOM の <code>&lt;slot&gt;</code> に投影された要素をスタイリングします。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Web Component 内部 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">slot</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;header&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">slot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 親コンポーネント --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">custom-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> slot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;header&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;ヘッダーの内容&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">custom-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::slotted(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>この例では、<code>&lt;slot&gt;</code> に渡された <code>&lt;h2&gt;</code> 要素が青色かつ太字で表示されます。</p><h2 id="🔹-part" tabindex="-1">🔹 ::part() <a class="header-anchor" href="#🔹-part" aria-label="Permalink to &quot;🔹 ::part()&quot;">​</a></h2><p>カスタム要素内の特定のパーツをスタイリングします。<br> Shadow DOM 内部で <code>part</code> 属性を定義することで、外部のスタイルからアクセス可能です。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Web Component 内部 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> part</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;action-button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Click Me&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">custom-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::part(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">action-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="🔹-before-after" tabindex="-1">🔹 ::before, ::after <a class="header-anchor" href="#🔹-before-after" aria-label="Permalink to &quot;🔹 ::before, ::after&quot;">​</a></h2><p>Shadow DOM 内部でも疑似要素を使ったスタイリングが可能です。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">custom-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;メインテキスト&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">custom-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;▶ &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">green</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="🔹-backdrop" tabindex="-1">🔹 ::backdrop <a class="header-anchor" href="#🔹-backdrop" aria-label="Permalink to &quot;🔹 ::backdrop&quot;">​</a></h2><p><code>&lt;dialog&gt;</code> 要素や <code>&lt;details&gt;</code> の背景にスタイルを適用する場合に使用します。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dialog</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;モーダルダイアログ&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dialog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::backdrop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="🔹-スタイルの伝搬フロー図" tabindex="-1">🔹 スタイルの伝搬フロー図 <a class="header-anchor" href="#🔹-スタイルの伝搬フロー図" aria-label="Permalink to &quot;🔹 スタイルの伝搬フロー図&quot;">​</a></h2>`,25)),(i(),p(o,null,{default:a(()=>[E(t,{id:"mermaid-124",class:"mermaid",graph:"flowchart%20TD%0A%20%20%20%20LightDOM%20--%3E%7C%E5%A4%96%E9%83%A8%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%7C%20ShadowBoundary%0A%20%20%20%20ShadowBoundary%20--%3E%7C%E5%86%85%E9%83%A8%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%7C%20ShadowDOM%0A%20%20%20%20ShadowDOM%20--%3E%7CScoped%20CSS%7C%20SLOT%5B%22%3A%3Aslotted()%22%5D%0A%20%20%20%20ShadowDOM%20--%3E%7CScoped%20CSS%7C%20PART%5B%22%3A%3Apart()%22%5D%0A"})]),fallback:a(()=>s[0]||(s[0]=[d(" Loading... ")])),_:1})),s[2]||(s[2]=k("p",null,"擬似クラスを活用することで、Shadow DOM 内のスタイリングを効果的にコントロールできるようになります。",-1))])}const v=h(r,[["render",c]]);export{F as __pageData,v as default};
