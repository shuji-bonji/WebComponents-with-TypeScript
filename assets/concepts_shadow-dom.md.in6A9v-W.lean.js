import{_ as n,C as l,c as k,o as i,a2 as a,b as e,w as t,a as p,G as d,a3 as E}from"./chunks/framework.d0B5J8SC.js";const D=JSON.parse('{"title":"Shadow DOM","description":"Shadow DOM の仕組みと構造を解説。Shadow Host、Shadow Root、Shadow Boundary の役割、open/closed モードの使い分け、スタイルのカプセル化、dir/lang 属性の継承、Custom Elements との統合方法を図解と実装例とともに詳しく紹介します。","frontmatter":{"title":"Shadow DOM","description":"Shadow DOM の仕組みと構造を解説。Shadow Host、Shadow Root、Shadow Boundary の役割、open/closed モードの使い分け、スタイルのカプセル化、dir/lang 属性の継承、Custom Elements との統合方法を図解と実装例とともに詳しく紹介します。"},"headers":[],"relativePath":"concepts/shadow-dom.md","filePath":"concepts/shadow-dom.md"}'),o={name:"concepts/shadow-dom.md"};function r(g,s,c,y,F,u){const h=l("Mermaid");return i(),k("div",null,[s[1]||(s[1]=a("",13)),(i(),e(E,null,{default:t(()=>[d(h,{id:"mermaid-170",class:"mermaid",graph:"graph%20TB%0A%20%20%20%20A%5BShadow%20Host%5D%20--%3E%20%7C%22attachShadow()%22%7C%20B%5BShadow%20Root%5D%0A%20%20%20%20%0A%20%20%20%20G%5BLight%20DOM%5D%20-.-%3E%20%7C%22%E3%82%B9%E3%83%AD%E3%83%83%E3%83%88%E3%82%92%E9%80%9A%E3%81%98%E3%81%A6%E6%8A%95%E5%BD%B1%22%7C%20D%0A%0A%20%20%20%20H%5BShadow%20DOM%5D%20-.-%20shadowBoundary%0A%20%20%20%20style%20H%20fill%3A%23333%2Cstroke%3A%23333%2Cstroke-dasharray%3A%205%205%0A%0A%20%20%20%20subgraph%20shadowBoundary%5B%22Shadow%20Boundary%22%5D%0A%20%20%20%20%20%20%20%20B%20--%3E%20C%5BShadow%20Tree%5D%0A%20%20%20%20%20%20%20%20C%20--%3E%20D%5B%E3%82%B9%E3%83%AD%E3%83%83%E3%83%88%5D%0A%20%20%20%20%20%20%20%20C%20--%3E%20E%5B%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%5D%0A%20%20%20%20%20%20%20%20C%20--%3E%20F%5B%E5%86%85%E9%83%A8DOM%E8%A6%81%E7%B4%A0%5D%0A%20%20%20%20end%20%20%20%20%0A"})]),fallback:t(()=>s[0]||(s[0]=[p(" Loading... ")])),_:1})),s[2]||(s[2]=a("",32))])}const m=n(o,[["render",r]]);export{D as __pageData,m as default};
